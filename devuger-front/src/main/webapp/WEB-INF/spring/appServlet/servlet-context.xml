<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<beans:import resource="jpa-context.xml" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<message-converters>
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="supportedMediaTypes" value="application/json; utf-8" />
			</beans:bean>
		</message-converters>
	</annotation-driven>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean id='viewResolver' class='org.springframework.web.servlet.view.UrlBasedViewResolver'>
		<beans:property name="viewClass" value='org.springframework.web.servlet.view.tiles2.TilesView' />
		<beans:property name="order" value='1' />
	</beans:bean>
	
	<beans:bean id='tilesConfigurer' class='org.springframework.web.servlet.view.tiles2.TilesConfigurer'>
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value='2' />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.devuger" />
		
	<interceptors>
		<interceptor>
			<mapping path="/" />
			<mapping path="/comments/**" />
			<mapping path="/devices/**" />
			<mapping path="/feeds/**" />
			<mapping path="/users/**" />
			<beans:bean class="com.devuger.front.interceptor.LoggingHandlerInterceptor" />			
		</interceptor>
	</interceptors>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/favicon.ico"  location="/resources//favicon.ico" order="0"/>

	<!-- ehCache bean -->
 	<cache:annotation-driven cache-manager="cacheManager" />
	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<beans:property name="cacheManager">
			<beans:bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
				<beans:property name="configLocation" value="classpath:ehcache.xml"></beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<!-- PASSWORD ENCODE -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	<!-- messageSource -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
    
	<!-- Configure the multipart resolver -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <beans:property name="maxUploadSize" value="20485760"/>
    </beans:bean>

	<beans:bean id="exceptionResolver" class="com.devuger.common.support.exception.DefaultException">
		<beans:constructor-arg name="view">
			<beans:value>common/error</beans:value>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.mail.yahoo.com" />
		<beans:property name="protocol" value="smtp" />
		<beans:property name="port" value="25" />
		<beans:property name="username" value="no-reply@devuger" />
		<beans:property name="password" value="devuger" />
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtps.auth">false</beans:prop>
				<beans:prop key="mail.smtps.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtps.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<beans:property name="velocityProperties">
			<beans:value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</beans:value>
		</beans:property>
	</beans:bean>

	<!-- enable autowire -->
	<context:annotation-config />

</beans:beans>
